import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { environment } from '../../environments/environment';
import { Storage } from '@ionic/storage';
import { ILogin, MsnAPIUser } from '../interfaces/UsuarioInterface';
import { Observable } from 'rxjs';

const URL = environment.url;
@Injectable({
  providedIn: 'root'
})
export class UsuariosService {
  token: string = '';
  httpOptions = {
    headers: new HttpHeaders({
      'Content-Type': 'application/x-www-form-urlencoded'
    })
  };
  ruta: string = '';
  data: any;
  constructor(private http: HttpClient, private storage: Storage) { }

  // tslint:disable-next-line: no-shadowed-variable
  login( datosLogin: ILogin ): Observable<MsnAPIUser>{
    const email = datosLogin.email;
    const password = datosLogin.password;
    const data = { email, password };
    const ruta = `${ URL }/usuarios/login`;
    console.log(ruta, data);

   // return this.http.post <MsnAPIUser>( this.ruta, this.data,this.httpOptions )
    return this.http.post <MsnAPIUser>( ruta, data );
  }
  getUsuarios(){
    console.log('usuarios');
    return this.http.get(`${ URL }/usuarios/new`);
  }
  // async es para que retorne una promesa
  async saveToken(token: string) {
    this.token = token;
    // await: Esperamos (bloqueo) hasta que token se haya almacenado en el storage y al app no siga
    await this.storage.set('token', token); // almacenamos el token
  }

  
}